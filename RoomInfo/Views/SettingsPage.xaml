<Page
    x:Class="RoomInfo.Views.SettingsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"    
    Style="{StaticResource PageStyle}"
    xmlns:prismMvvm="using:Prism.Windows.Mvvm"
    prismMvvm:ViewModelLocator.AutoWireViewModel="True" 
    xmlns:helper="using:RoomInfo.Helpers"
    xmlns:xaml="using:Windows.UI.Xaml"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:userControl="using:RoomInfo.Views"
    mc:Ignorable="d">
    <Page.Resources>
        <helper:EnumToBooleanConverter x:Key="EnumToBooleanConverter" EnumType="ElementTheme" />
        <helper:LanguageEnumToBooleanConverter x:Key="LanguageEnumToBooleanConverter"/>
        <Flyout x:Name="fileSelectionFlyout">
            <Flyout.FlyoutPresenterStyle>
                <Style TargetType="FlyoutPresenter">
                    <Setter Property="MaxWidth" Value="768"/>
                </Style>
            </Flyout.FlyoutPresenterStyle>
            <Grid>
                <ListView ItemsSource="{Binding FileItems}">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid x:Name="flyoutGrid" >                                
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>                                
                                <RadioButton  IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Command="{Binding SelectCommand}" HorizontalAlignment="Left" Content="{Binding FileName}"/>
                                <Image Grid.Column="1" Source="{Binding ImageSource, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Width="56" Height="56" Margin="12,0,0,0"/>
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
        </Flyout>
    </Page.Resources>

    <Grid Margin="{StaticResource MediumLeftRightMargin}">
        <ScrollViewer>
            <StackPanel
            x:Name="ContentArea">                
                <TextBlock
                x:Uid="Settings_Personalization"
                Style="{StaticResource SubtitleTextBlockStyle}" />

                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock
                    x:Uid="Settings_Theme"
                    Style="{StaticResource BodyTextStyle}" />

                    <StackPanel Margin="{StaticResource EightTopMargin}">
                        <RadioButton 
                        x:Uid="Settings_Theme_Light" 
                        GroupName="AppTheme" 
                        IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Light, Mode=OneWay}"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Light</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton 
                        x:Uid="Settings_Theme_Dark" 
                        GroupName="AppTheme"
                        IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Dark, Mode=OneWay}"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Dark</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                        <RadioButton 
                        x:Uid="Settings_Theme_Default"
                        GroupName="AppTheme"
                        IsChecked="{Binding ElementTheme, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter=Default, Mode=OneWay}"
                        Command="{x:Bind ViewModel.SwitchThemeCommand}">
                            <RadioButton.CommandParameter>
                                <xaml:ElementTheme>Default</xaml:ElementTheme>
                            </RadioButton.CommandParameter>
                        </RadioButton>
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock x:Uid="Settings_Language" Style="{StaticResource SubtitleTextBlockStyle}" />
                    <RadioButton x:Uid="Settings_Language_English" GroupName="Language" Command="{x:Bind ViewModel.SwitchLanguageCommand}" CommandParameter="en-US" IsChecked="{Binding Language, Converter={StaticResource LanguageEnumToBooleanConverter}, ConverterParameter=en_US, Mode=OneWay}"/>
                    <RadioButton x:Uid="Settings_Language_German" GroupName="Language" Command="{x:Bind ViewModel.SwitchLanguageCommand}" CommandParameter="de-DE" IsChecked="{Binding Language, Converter={StaticResource LanguageEnumToBooleanConverter}, ConverterParameter=de_DE, Mode=OneWay}"/>
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock x:Uid="Settings_Ports" Style="{StaticResource SubtitleTextBlockStyle}" />
                    <TextBlock x:Uid="Settings_TcpPort" Style="{StaticResource BodyTextStyle}"/>
                    <TextBox Text="{Binding TcpPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left" KeyDown="{x:Bind ViewModel.KeyDown}" PlaceholderText="8273" InputScope="Digits" MaxLength="5" />
                    <TextBlock x:Uid="Settings_UdpPort" Style="{StaticResource BodyTextStyle}"/>
                    <TextBox Text="{Binding UdpPort, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Left" KeyDown="{x:Bind ViewModel.KeyDown}" PlaceholderText="8274" InputScope="Digits" MaxLength="5" />
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock x:Name="standardOccupancyTextBlock" x:Uid="Settings_StandardOccupancy" Style="{StaticResource SubtitleTextBlockStyle}" HorizontalAlignment="Left" />
                    <ComboBox HorizontalAlignment="Left" VerticalAlignment="Center" SelectedIndex="{Binding SelectedComboBoxIndex, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" Width="129">
                        <interactivity:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="SelectionChanged">
                                <core:InvokeCommandAction Command="{x:Bind ViewModel.SetStandardOccupancyCommand}"/>
                            </core:EventTriggerBehavior>
                        </interactivity:Interaction.Behaviors>
                        <ComboBoxItem x:Uid="Info_OccupancyFree" />
                        <ComboBoxItem x:Uid="Info_OccupancyPresent" />
                        <ComboBoxItem x:Uid="Info_OccupancyAbsent" />
                        <ComboBoxItem x:Uid="Info_OccupancyBusy" />
                        <ComboBoxItem x:Uid="Info_OccupancyOccupied" />
                        <ComboBoxItem x:Uid="Info_OccupancyLocked" />
                    </ComboBox>
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock x:Uid="Settings_RoomSettings" Style="{StaticResource SubtitleTextBlockStyle}" />
                    <TextBlock x:Uid="Settings_RoomName" Style="{StaticResource BodyTextStyle}"/>
                    <TextBox Grid.Column="1" x:Uid="Settings_RoomNamePlaceHolder" Text="{Binding RoomName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="{Binding Path=ActualWidth, ElementName=standardOccupancyTextBlock}" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Column="2" x:Uid="Settings_RoomNumber" Style="{StaticResource BodyTextStyle}"/>
                    <TextBox Grid.Column="3" x:Uid="Settings_RoomNumberPlaceHolder" Text="{Binding RoomNumber, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="{Binding Path=ActualWidth, ElementName=standardOccupancyTextBlock}" HorizontalAlignment="Left"/>
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}">
                    <TextBlock x:Uid="Settings_CompanySettings" Style="{StaticResource SubtitleTextBlockStyle}" />
                    <TextBlock x:Uid="Settings_CompanyName" Style="{StaticResource BodyTextStyle}"/>
                    <TextBox Grid.Column="1" x:Uid="Settings_CompanyNamePlaceHolder" Text="{Binding CompanyName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Width="{Binding Path=ActualWidth, ElementName=standardOccupancyTextBlock}" HorizontalAlignment="Left"/>
                    <TextBlock Grid.Column="2" x:Uid="Settings_CompanyLogo" Style="{StaticResource BodyTextStyle}"/>
                    <StackPanel HorizontalAlignment="Left">
                        <Image x:Name="CompanyLogo" Source="{Binding CompanyLogo}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MaxWidth="128" MaxHeight="128" />
                        <Grid HorizontalAlignment="Center" Margin="0,4,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="selectLogoButton" Grid.Column="0" x:Uid="Settings_SelectButton" Command="{Binding SelectLogoCommand}" CommandParameter="{Binding ElementName=fileSelectionFlyout}" Margin="0,0,2,0" Flyout="{StaticResource fileSelectionFlyout}" />
                            <Button Grid.Column="1" x:Uid="Settings_DeleteButton" Command="{x:Bind ViewModel.DeleteLogoCommand}" Margin="2,0,0,0" />
                        </Grid>
                    </StackPanel>
                </StackPanel>
                <StackPanel Margin="{StaticResource SettingsSubheaderMargin}" BorderThickness="3" HorizontalAlignment="Left" BorderBrush="#7FFF0000" Visibility="{Binding IotPanelVisibility}">
                    <Border HorizontalAlignment="Left" BorderBrush="#7FFF0000" BorderThickness="0,0,3,3">
                        <TextBlock Text="IoT" Foreground="#7FFF0000" Style="{StaticResource SubtitleTextBlockStyle}" Padding="3,0,0,0"/>
                    </Border>
                    <Button x:Name="WiFiConfigButton" x:Uid="Settings_IoT_WiFiButton" Style="{StaticResource RedTransparentButtonStyle}" Content="Config Wi-Fi" Margin="2,2,2,0" HorizontalAlignment="Left" >
                        <Button.Flyout>
                            <Flyout Closing="{x:Bind ViewModel.Flyout_Closing}">                                
                                <userControl:WiFiUserControl />
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <Button x:Name="DeviceRestartButton" x:Uid="Settings_IoT_RestartButton" Style="{StaticResource RedTransparentButtonStyle}" Content="Device Restart" Width="{Binding ElementName=WiFiConfigButton, Path=ActualWidth}" Command="{x:Bind ViewModel.RestartCommand}" Margin="2,0,2,0"/>
                    <Button x:Name="DeviceShutdownButton" x:Uid="Settings_IoT_ShutdownButton" Style="{StaticResource RedTransparentButtonStyle}" Content="Device Shutdown" Width="{Binding ElementName=WiFiConfigButton, Path=ActualWidth}" Command="{x:Bind ViewModel.ShutdownCommand}" Margin="2,0,2,2"/>
                </StackPanel>
                <TextBlock x:Uid="Settings_About" Style="{StaticResource SubtitleTextBlockStyle}"/>
                <StackPanel Margin="{StaticResource EightTopMargin}">
                    <TextBlock
                    Text="{x:Bind ViewModel.VersionDescription, Mode=OneWay}" />
                    <!--<TextBlock
                    x:Uid="Settings_AboutDescription"
                    Margin="{StaticResource EightTopMargin}" />-->

                    <HyperlinkButton
                    x:Uid="Settings_SupportLink" 
                    Margin="{StaticResource EightTopMargin}" />

                    <HyperlinkButton
                    x:Uid="Settings_PrivacyTermsLink" 
                    Margin="{StaticResource EightTopMargin}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</Page>
